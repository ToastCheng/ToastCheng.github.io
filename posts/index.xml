<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on ShihCheng Tu</title><link>https://toastcheng.github.io/posts/</link><description>Recent content in Posts on ShihCheng Tu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 29 Sep 2020 22:26:00 +0800</lastBuildDate><atom:link href="https://toastcheng.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Go Cover: A Neat Tool to Achieve 100% Coverage</title><link>https://toastcheng.github.io/posts/2020-09-29-go-cover/</link><pubDate>Tue, 29 Sep 2020 22:26:00 +0800</pubDate><guid>https://toastcheng.github.io/posts/2020-09-29-go-cover/</guid><description>When writing software for production, inevitably you will have to write some unit test to ensure the functionalities are working just fine in certain scenario.</description></item><item><title>How to deal with non-HTTP traffic in Nginx?</title><link>https://toastcheng.github.io/posts/2020-05-08-nginx/</link><pubDate>Fri, 08 May 2020 21:02:50 +0800</pubDate><guid>https://toastcheng.github.io/posts/2020-05-08-nginx/</guid><description>Nginx as a web server, it&amp;rsquo;s not surprising that it deals with HTTP traffic most of the time.</description></item><item><title>Orthanc: setup your PACS server in no time</title><link>https://toastcheng.github.io/posts/2020-02-25-set-up-your-pacs-server-in-no-time/</link><pubDate>Tue, 25 Feb 2020 13:32:56 +0800</pubDate><guid>https://toastcheng.github.io/posts/2020-02-25-set-up-your-pacs-server-in-no-time/</guid><description>This article demonstrate how you can setup a PACS server using docker.</description></item><item><title>Torchscript: train in Python, run in C++</title><link>https://toastcheng.github.io/posts/2020-01-09-torchscript/</link><pubDate>Thu, 09 Jan 2020 13:32:56 +0800</pubDate><guid>https://toastcheng.github.io/posts/2020-01-09-torchscript/</guid><description>This article is mainly about serialize a pytorch model, and load it into C++.</description></item></channel></rss>