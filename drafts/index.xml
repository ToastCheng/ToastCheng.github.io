<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Drafts on ShihCheng Tu</title><link>https://toastcheng.github.io/drafts/</link><description>Recent content in Drafts on ShihCheng Tu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://toastcheng.github.io/drafts/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://toastcheng.github.io/drafts/2020-11-28-event-loop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-11-28-event-loop/</guid><description>What the heck is the event loop anyway? | Philip Roberts | JSConf EU</description></item><item><title/><link>https://toastcheng.github.io/drafts/2020-11-28-solid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-11-28-solid/</guid><description>SOLID aiming to
make the codebase more maintainable make the codebase more extendable make the codebase easy to read 1.</description></item><item><title/><link>https://toastcheng.github.io/drafts/2020-11-29-mysql-index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-11-29-mysql-index/</guid><description>SELECT user FROM user_table WHERE YEAR(create_at) = 2013; see detail</description></item><item><title/><link>https://toastcheng.github.io/drafts/2020-12-01-gc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-12-01-gc/</guid><description>GC:
tracking memory allocations in heap memory releasing allocations that are no longer needed keeping allocations that are still in-use Collection phase</description></item><item><title/><link>https://toastcheng.github.io/drafts/2020-12-04-es/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-12-04-es/</guid><description>bulk create data put
curl -X PUT &amp;#34;localhost:9200/library/book/_bulk?refresh&amp;amp;pretty&amp;#34; -H &amp;#39;Content-Type: application/json&amp;#39; -d&amp;#39; {&amp;#34;index&amp;#34;:{&amp;#34;_id&amp;#34;: &amp;#34;Leviathan Wakes&amp;#34;}} {&amp;#34;name&amp;#34;: &amp;#34;Leviathan Wakes&amp;#34;, &amp;#34;author&amp;#34;: &amp;#34;James S.</description></item><item><title/><link>https://toastcheng.github.io/drafts/2020-12-05-profiling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-12-05-profiling/</guid><description>pprof test add flags: -cpuprofile, -memprofile
explicitly added runtime.</description></item><item><title/><link>https://toastcheng.github.io/drafts/2020-12-05-sync-pool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-12-05-sync-pool/</guid><description>var syncPool = sync.Pool { New: func () interface{} { return .</description></item><item><title/><link>https://toastcheng.github.io/drafts/2020-12-08-mongo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://toastcheng.github.io/drafts/2020-12-08-mongo/</guid><description>Read concern db.collection.find().readConcern(&amp;lt;level&amp;gt;)
For multi-document transactions, you set the read concern at the transaction level, not at the individual operation level.</description></item></channel></rss>